{"meta":{"title":"Stone's Blog","subtitle":"苗世通","description":"我的个人站！认真生活，持续成长~","author":"Stone","url":"http://miaoshitong.github.io","root":"/"},"pages":[{"title":"About me","date":"2020-09-07T23:26:24.000Z","updated":"2020-09-15T03:27:06.061Z","comments":true,"path":"about/index.html","permalink":"http://miaoshitong.github.io/about/index.html","excerpt":"","text":"自我介绍一下： 我是一级嗜睡症运动员 ，一级退堂鼓演奏家， 互联网冲浪资深选手 ，赖床锦标赛冠军 ，贫困大赛形象代言人 ，送命式熬夜专业选手 ，资深业余美食家，午夜心碎俱乐部会员， 国家一级抬杠运动员， 谎话精形象艺术家，淘宝鉴定专家，感情分析师，拖延症晚期患者。新的记录有待创造~~"},{"title":"分类","date":"2020-09-07T23:26:08.000Z","updated":"2020-09-15T02:15:56.115Z","comments":true,"path":"categories/index.html","permalink":"http://miaoshitong.github.io/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2020-09-15T02:13:35.000Z","updated":"2020-09-15T02:15:19.559Z","comments":true,"path":"tags/index.html","permalink":"http://miaoshitong.github.io/tags/index.html","excerpt":"","text":""},{"title":"","date":"2020-09-14T12:03:48.988Z","updated":"2020-09-14T11:59:42.870Z","comments":true,"path":"js/cursor/baozha.html","permalink":"http://miaoshitong.github.io/js/cursor/baozha.html","excerpt":"","text":"\"use strict\";function updateCoords(e){pointerX=(e.clientX||e.touches[0].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[0].clientY-canvasEl.getBoundingClientRect().top}function setParticuleDirection(e){var t=anime.random(0,360)*Math.PI/180,a=anime.random(50,180),n=[-1,1][anime.random(0,1)]*a;return{x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)}}function createParticule(e,t){var a={};return a.x=e,a.y=t,a.color=colors[anime.random(0,colors.length-1)],a.radius=anime.random(16,32),a.endPos=setParticuleDirection(a),a.draw=function(){ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.fillStyle=a.color,ctx.fill()},a}function createCircle(e,t){var a={};return a.x=e,a.y=t,a.color=\"#F00\",a.radius=.1,a.alpha=.5,a.lineWidth=6,a.draw=function(){ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=1},a}function renderParticule(e){for(var t=0;t"},{"title":"","date":"2020-09-14T12:03:48.988Z","updated":"2020-09-14T11:59:12.420Z","comments":true,"path":"js/cursor/fireworks.html","permalink":"http://miaoshitong.github.io/js/cursor/fireworks.html","excerpt":"","text":"class Circle { constructor({ origin, speed, color, angle, context }) { this.origin = origin this.position = { ...this.origin } this.color = color this.speed = speed this.angle = angle this.context = context this.renderCount = 0 } draw() { this.context.fillStyle = this.color this.context.beginPath() this.context.arc(this.position.x, this.position.y, 2, 0, Math.PI * 2) this.context.fill() } move() { this.position.x = (Math.sin(this.angle) * this.speed) + this.position.x this.position.y = (Math.cos(this.angle) * this.speed) + this.position.y + (this.renderCount * 0.3) this.renderCount++ } } class Boom { constructor ({ origin, context, circleCount = 16, area }) { this.origin = origin this.context = context this.circleCount = circleCount this.area = area this.stop = false this.circles = [] } randomArray(range) { const length = range.length const randomIndex = Math.floor(length * Math.random()) return range[randomIndex] } randomColor() { const range = ['8', '9', 'A', 'B', 'C', 'D', 'E', 'F'] return '#' + this.randomArray(range) + this.randomArray(range) + this.randomArray(range) + this.randomArray(range) + this.randomArray(range) + this.randomArray(range) } randomRange(start, end) { return (end - start) * Math.random() + start } init() { for(let i = 0; i < this.circleCount; i++) { const circle = new Circle({ context: this.context, origin: this.origin, color: this.randomColor(), angle: this.randomRange(Math.PI - 1, Math.PI + 1), speed: this.randomRange(1, 6) }) this.circles.push(circle) } } move() { this.circles.forEach((circle, index) => { if (circle.position.x > this.area.width || circle.position.y > this.area.height) { return this.circles.splice(index, 1) } circle.move() }) if (this.circles.length == 0) { this.stop = true } } draw() { this.circles.forEach(circle => circle.draw()) } } class CursorSpecialEffects { constructor() { this.computerCanvas = document.createElement('canvas') this.renderCanvas = document.createElement('canvas') this.computerContext = this.computerCanvas.getContext('2d') this.renderContext = this.renderCanvas.getContext('2d') this.globalWidth = window.innerWidth this.globalHeight = window.innerHeight this.booms = [] this.running = false } handleMouseDown(e) { const boom = new Boom({ origin: { x: e.clientX, y: e.clientY }, context: this.computerContext, area: { width: this.globalWidth, height: this.globalHeight } }) boom.init() this.booms.push(boom) this.running || this.run() } handlePageHide() { this.booms = [] this.running = false } init() { const style = this.renderCanvas.style style.position = 'fixed' style.top = style.left = 0 style.zIndex = '999999999999999999999999999999999999999999' style.pointerEvents = 'none' style.width = this.renderCanvas.width = this.computerCanvas.width = this.globalWidth style.height = this.renderCanvas.height = this.computerCanvas.height = this.globalHeight document.body.append(this.renderCanvas) window.addEventListener('mousedown', this.handleMouseDown.bind(this)) window.addEventListener('pagehide', this.handlePageHide.bind(this)) } run() { this.running = true if (this.booms.length == 0) { return this.running = false } requestAnimationFrame(this.run.bind(this)) this.computerContext.clearRect(0, 0, this.globalWidth, this.globalHeight) this.renderContext.clearRect(0, 0, this.globalWidth, this.globalHeight) this.booms.forEach((boom, index) => { if (boom.stop) { return this.booms.splice(index, 1) } boom.move() boom.draw() }) this.renderContext.drawImage(this.computerCanvas, 0, 0, this.globalWidth, this.globalHeight) } } const cursorSpecialEffects = new CursorSpecialEffects() cursorSpecialEffects.init()"},{"title":"","date":"2020-09-14T12:03:48.988Z","updated":"2020-09-14T12:01:59.424Z","comments":true,"path":"js/cursor/wenzi.html","permalink":"http://miaoshitong.github.io/js/cursor/wenzi.html","excerpt":"","text":"var a_idx = 0; jQuery(document).ready(function($) { $(\"body\").click(function(e) { var a = new Array(\"喜欢我\", \"不喜欢我\"); var $i = $(\"\").text(a[a_idx]); var x = e.pageX, y = e.pageY; $i.css({ \"z-index\": 99999, \"top\": y - 28, \"left\": x - a[a_idx].length * 8, \"position\": \"absolute\", \"color\": \"#ff7a45\" }); $(\"body\").append($i); $i.animate({ \"top\": y - 180, \"opacity\": 0 }, 1500, function() { $i.remove(); }); a_idx = (a_idx + 1) % a.length; }); });"},{"title":"","date":"2020-09-14T12:03:48.988Z","updated":"2020-09-14T12:00:18.525Z","comments":true,"path":"js/cursor/xin.html","permalink":"http://miaoshitong.github.io/js/cursor/xin.html","excerpt":"","text":"!function(e,t,a){function n(){c(\".heart{width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);}.heart:after,.heart:before{content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;}.heart:after{top: -5px;}.heart:before{left: -5px;}\"),o(),r()}function r(){for(var e=0;e"}],"posts":[{"title":"文献阅读-2020-9-16","slug":"文献阅读-2020-9-16","date":"2020-09-16T03:16:07.000Z","updated":"2020-09-16T03:39:08.344Z","comments":true,"path":"post/7f0709f7.html","link":"","permalink":"http://miaoshitong.github.io/post/7f0709f7.html","excerpt":"大数据行为研究趋势：一个“时空关”的视角 贾建民，耿维，徐戈，郝辽钢，贾轼","text":"大数据行为研究趋势：一个“时空关”的视角 贾建民，耿维，徐戈，郝辽钢，贾轼 1.研究意义基于城市公交刷卡数据、滴滴订单数据、铁路客运数据、移动通讯数据等，从“时空关”的视角，研究了人们流动的时空关系和流动行为及其对环境的影响、流动行为的社会关联特征和社会网络对流动性的影响、社会网络的嵌入性和进化机制及对应急通讯的影响以及社会网络对利他行为的影响。 2.研究方法双重差分方法 3.论文摘要本文从时间、空间、关联（Time-Space-Connections）3 个维度，即“时空关”视角，聚焦人们的流动性和关联性以及两者之间的关系。 在移动互联网、社交网络、物联网等新兴信息技术的支持下，人们的个体行为与组织行为均呈现出鲜明的网络化特征。 流动性，即人们在空间和时间上的位移，是人类生活与工作的必要条件，并影响着人们的各种行为；而关联性，即人与人之间通过血缘、婚姻、工作、同学以及朋友等各种关系相连接，描绘出人类社会的结构特征。 “时空关”决定或影响着人们的各种行为，从人们的流动行为和社会关联角度去分析交通拥堵、城市规划、公共政策、应急管理、病菌传播等问题，可以获得更多的洞察。 “六度分隔”是社会网络领域早期最重要的猜想：世界上任何两个人都可以通过一系列彼此认识的人（5个人6条边）连接起来，即所谓的“小世界”现象。 社会网络节点之间的连接强度（联系的频繁程度）同样具有幂律分布的特征，即每个节点除了少数的强关系，其余大部分都是弱关系。 ]Onnela 等（2007）应用手机通讯数据研究了关系强度与网络局部结构之间的耦合关系，发现如果去掉强关系，社会网络的结构依然稳健；但如果把弱关系去掉，整个网络就会崩溃。 Aral 和 Walker（2014）在 Facebook 平台上采用大规模随机实验来研究关系强度和各种网络结构嵌入对朋友之间产品采纳的社会影响力，发现结构嵌入起着重要作用。 Aral 和 Walker（2012）基于 130 万 Facebook 用户开展了有关产品采用的随机实验，发现影响力和易感性这两者往往不能兼得，即具有较强影响力的人不易受他人影响，而易受影响的人往往又缺少影响力。另外，他们的研究还显示，年轻人比年长的人更易受他人影响；男性的影响力比女性高 49%，但女性对男性的影响力比对同性的影响力高 46%；已婚人士受他人影响的程度最低；同龄人间的影响力最大（高出基准线 97%）。 Ren 等 （2019）从另外一个角度研究显示，通过移除社会网络中一些节点可以有效地摧毁网络的功能，这在控制腐败、犯罪、疫情、谣言传播等领域有广泛的应用价值。 城市交通拥堵和环境污染是我国政府和公众近年来最为关注的两大议题。从人们流动行为的角度来研究城市交通拥堵与空气污染之间的关系，是一个全新的研究课题。","categories":[{"name":"文献阅读","slug":"文献阅读","permalink":"http://miaoshitong.github.io/categories/%E6%96%87%E7%8C%AE%E9%98%85%E8%AF%BB/"},{"name":"《管理世界》","slug":"文献阅读/《管理世界》","permalink":"http://miaoshitong.github.io/categories/%E6%96%87%E7%8C%AE%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%A1%E7%90%86%E4%B8%96%E7%95%8C%E3%80%8B/"}],"tags":[{"name":"大数据","slug":"大数据","permalink":"http://miaoshitong.github.io/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"},{"name":"流动性","slug":"流动性","permalink":"http://miaoshitong.github.io/tags/%E6%B5%81%E5%8A%A8%E6%80%A7/"},{"name":"社会网络","slug":"社会网络","permalink":"http://miaoshitong.github.io/tags/%E7%A4%BE%E4%BC%9A%E7%BD%91%E7%BB%9C/"},{"name":"时空关","slug":"时空关","permalink":"http://miaoshitong.github.io/tags/%E6%97%B6%E7%A9%BA%E5%85%B3/"},{"name":"行为研究","slug":"行为研究","permalink":"http://miaoshitong.github.io/tags/%E8%A1%8C%E4%B8%BA%E7%A0%94%E7%A9%B6/"}]},{"title":"2020年1至9月观影记录","slug":"2020年1至9月观影记录","date":"2020-09-16T00:02:21.000Z","updated":"2020-09-16T01:13:46.737Z","comments":true,"path":"post/4116090.html","link":"","permalink":"http://miaoshitong.github.io/post/4116090.html","excerpt":"And then you shot across my sky like a meteor. Suddenly everything was on fire; there was brilliancy, there was beauty. When you were gone, when the meteor had fallen over the horizon, everything went black. Nothing had changed, but my eyes were blinded by the light. I couldn't see the stars anymore. ——Stephenie Meyer《The Twilight Saga： New Moon》","text":"And then you shot across my sky like a meteor. Suddenly everything was on fire; there was brilliancy, there was beauty. When you were gone, when the meteor had fallen over the horizon, everything went black. Nothing had changed, but my eyes were blinded by the light. I couldn't see the stars anymore. ——Stephenie Meyer《The Twilight Saga： New Moon》 这3/4年看了太多的影视剧，时间有些浪费了，但如果能把这些都整理下来，写一点影评、观后感，形成系统的、有条理的内容，对自己写作上的提升还是挺不错的。有些电影确实值得一看，比如暮光之城系列、肖申克的救赎等，但有些就比较无脑，不想再接着看了（下面看了开头的电视剧是没时间看，先放那里了）。还有些英美剧（sex education）尺度比较大，但并不下流、色情，反而充满了温暖浪漫，还是很推荐看一看的。九月份新学期，也是我研究生最后一年了，要把更多的精力放在论文、英语学习相关的事情上，影视剧能少看就少看了，还是要对自己负责一些。 电影[1]囧妈126 min[2]叶问4：完结篇107 min[3]宠爱108 min[4]终结者：黑暗命运128 min[5]情圣99 min[6]加勒比海盗1：黑珍珠号的诅咒143 min[7]加勒比海盗2：聚魂棺151 min[8]加勒比海盗3：世界的尽头169 min[9]加勒比海盗5：死无对证129 min[10]流感121 min[11]只有芸知道132 min[12]倒忌时90 min[13]沉默的羔羊118 min[14]大天蓬 101 min（2020年3月19日）[15]僵尸世界大战 123 min（2020年3月28日）[16]暮光之城 121 min（2020年4月1日）[17]暮光之城2：新月 130 min（2020年4月2日）[18]暮光之城3：月食 123 min（2020年4月3日）[19]大赢家2020 97 min（2020年4月3日）[20]肥龙过江2020 96 min（2020年4月5日）[21]狩猎 90 min（2020年4月24日）[22]肖申克的救赎 141 min（2020年4月24日）[23]醉拳2 102 min（2020年5月8日）[24]饥饿游戏 142 min（2020年5月11日）[25]巨鳄风暴 87 min（2020年5月13日）[26]异形 115 min（2020年5月18日）[27]异形2 154 min（2020年5月19日）[28]异形3 144 min（2020年5月20日）[29]异形4 114 min（2020年5月20日）[30]豪门夜宴 95 min（2020年5月25日）[31]老九门之四屠黄葵 76 min（2020年6月2日）[32]老九门番外之虎骨梅花 88 min（2020年6月3日）[33]集结号 123 min（2020年6月23日）[34]猎谎者 93 min (2020年7月4日）[35]跳舞吧！大象 114 min（2020年7月12日）[36]陆行鲨 74 min（2020年7月28日）[37]零号犯人 106 min（2020年7月31日）[38]活着 97 min（2020年8月6日）[39]见龙卸甲 101 min （2020年8月27日）[40]哈利波特与混血王子 153 min （2020年8月28日）[41]小丑回魂2 169 min （2020年9月11日）[42]花木兰 110 min （2020年9月11日） 电视剧[1]行尸走肉第一季——第十季（140集）[2]血疫第一季（6集）[3]新世界（70集）[4]想见你（3集）[5]决胜法庭（3集）[6]海贼王（920-935集）[7]汉尼拔第一季（1-4集）[8]重生（1-25集）[9]sex education 第一季（1-8集）[10]sex education 第二季（1-8集）[11]大群 第一季（1-3集）[12]爱,死亡和机器人（1-2集）[13]猎狐（1-44集）[14]王国 第一季（1-6集）[15]王国 第二季（1-6集）[16]天地粮人（1-22集）[17]人民的名义（1-24集）[18]进击的巨人第三季（1-22集）[19]安家 （1-32集）[20]斯巴达克斯:血与沙 第一季（1-13集）[21]斯巴达克斯：复仇 第二季（1-10集）[22]斯巴达克斯：诅咒者之战 第三季（1-集）[23]隐秘的角落 （1-12集）[24]妖精的尾巴 （293-328集）[25]传闻中的陈芊芊 （1-24集）[26]太子妃升职记 （1-集）[28]局中人 （1-49集）[29]名侦探柯南 （1-集）[30]普通人 （1-集）[31]穿越火线2020 （1-36集）[32]河神2 （1-3集）[33]盗墓笔记重启之极海听雷 （1-32集）[34]三十而已 （1-43集）[35]锦衣之下 （1-集）[36]鬼灭之刃 （1-26集）[37]二十不惑 （1-42集）[38]痕迹 （1-36集）[39]好兆头 （1-集）[40]Sex life （1-8集）[41]越狱第五季 （1-9集）[42]异星灾变 （1-4集）[43]寒武纪 （1-8集） I could see it in your eyes, that you honestly believed that I didn't want you anymore. ——Stephenie Meyer《The Twilight Saga： New Moon》","categories":[{"name":"观影","slug":"观影","permalink":"http://miaoshitong.github.io/categories/%E8%A7%82%E5%BD%B1/"}],"tags":[{"name":"电影","slug":"电影","permalink":"http://miaoshitong.github.io/tags/%E7%94%B5%E5%BD%B1/"},{"name":"电视剧","slug":"电视剧","permalink":"http://miaoshitong.github.io/tags/%E7%94%B5%E8%A7%86%E5%89%A7/"}]},{"title":"Hexo-Github搭建博客过程","slug":"Hexo-Github搭建博客过程","date":"2020-09-15T07:00:43.000Z","updated":"2020-09-15T12:22:13.858Z","comments":true,"path":"post/e8355efa.html","link":"","permalink":"http://miaoshitong.github.io/post/e8355efa.html","excerpt":"前言起初也是心血来潮想弄个博客玩，以前也有过这种想法，于是为了不再拖延，就立马行动起来了。这个博客搭建的磕磕绊绊的，但最后还是弄出来了，很简单，就是很琐碎，花费了七天，当然也是抽空弄得。","text":"前言起初也是心血来潮想弄个博客玩，以前也有过这种想法，于是为了不再拖延，就立马行动起来了。这个博客搭建的磕磕绊绊的，但最后还是弄出来了，很简单，就是很琐碎，花费了七天，当然也是抽空弄得。 中间进过很多坑，有一些细微的地方没有注意就会出错导致网页刷不出来，而且有些教程发布的有些许久远，不太适合现在的环境，耽误了很多时间。博客是根据我目前（2020年9月）的Next的版本（v7.8.0）并基于Github搭建的，所以，你首先要有个Github账号！ GithubGithub是一个开源的平台，里面有很多程序员开发的代码可以共享，我们的个人博客就托管于github这个平台。为什么选择github呢？因为穷啊！！！在搭建这个博客的前一天，突然看到阿里云的轻量应用服务器需要交费三个月及以上才能给我注册的域名备案（域名注册后需要三天才能备案），域名阿里云新用户第一年6元，往后是69¥/年，轻量型服务器（1核CPU、1GB内存、1Mbps带宽、20GB SSD）配置费用一年612¥，果断告辞，个人玩家不配拥有！！！ 这时，github映入我的眼帘，在参考网上诸多博客之后，就它了。毕竟有个闲置N年的github账号一直没机会用，机会终于来了，看吧，成功是给有准备的人的！关于github注册账号，没有的人简单注册一个就行，不用太花里胡哨，用英文名或者中文名拼音当用户名方便点，这个用户名就是你个人博客网址的主体部分，比如我的:miaoshitong.github.io ,有域名的后期博客建好了可以解析一下，这样域名也能登你博客，不过目前阶段暂不需要。 Jekyll &amp; Hexo选好博客的托管平台了，后面就是选择适合的博客框架。网上看用的比较多的有 Jekyll和Hexo，下面分别简单介绍一下吧。 JekyllJekyll官网提供的主题不好看(个人观点)。 HexoHexo官网提供的主题好看(很多人观点)。 你的选择经过上面详细的对比，你一定选的也是Hexo，所以我们有了共同的基础，可以进行下一步了。目前Hexo有324款主题，但作为初次尝试建博客的小白（是我）来说，还是遵从一下主流的选择：Next，你选不了吃亏，选不了上当，很多博主的博客都是根据Next改的，到时候可以一点一点模仿，减少犯错成本。 安装 Git先根据你电脑安装个git，后面需要一些指令来简化博客搭建过程。下载之后，一直next就可以了。安装后在Hexo文件夹右键单击选择Git Bash Here，会出现一个可以输入代码的小黑框，常用的命令如下： 代码 作用 $ hexo n &quot;博客名称&quot; 创建新文章 $ hexo clean 清除缓存网页 $ hexo g 生成静态网页 $ hexo s 本地预览网页（http://localhost:4000），还可以通过程序反馈找出错误地方 $ hexo d 部署到Github，即发布网页正常浏览 一般操作就是clean、g、s三连，没啥问题就$ hexo d 安装 Hexo接下来就需要安装Hexo了，官方有教程，同时也找了一个比较清晰易懂的博客可以学习。 NextNext安装接下来就是安装博客主题Next了，在Hexo文件夹里有个themes文件夹，里面的默认主题是landscape，通过git下载好Next后，把landscape文件夹删除，并且把next文件夹下面有个名字有git的文件夹也删除，起初两天主题更改不成功问题就出在这里，经过多方面资料查找，算是解决了。 Next配置最主要一点，很多教程提及的.swig文件在新版Next中找不到，没关系，经过我的探索，应该就是后缀名.njk的相应文件，打开方式记事本就能编辑了。 新版的Next里面没有_custom.styl文件，很多教程在配置Next的时候会用到，没关系，来看下大佬的博客，有解决方法。 还有一点，对小白（是我）来说，刚开始可能分不清，关于博客的配置有两个地方，一个是hexo文件夹下面的_config.yml文件，这个叫站点配置，还有一个是themes中next文件夹下面的_config.yml文件，这个地方叫主题配置，相应的配置细节问题网上搜素一下就可以自定义了。 在配置完成的时候，一定先$ hexo s本地预览一下，代码有错误在小黑框里能看出来，会有相应的提示，根据说明来把问题解决，没有问题本地预览一下也能让小白（是我）安心，部署到github出错就很慌，预览也就几秒不耽搁事。 最让我惊喜的地方是，在Hexo搭建博客页面还可以插入2D模型，22款模型，总有一款适合你。 博客建好了流程很简单，但是对没接触过的人来说会有些陌生，尝试两三天就会对这个有个大致了解，能把博客搭建出来。不过博客也不用太花哨，内容最重要，还要坚持记录才行，大概的框架搭好，看着顺眼，就可以使用了！","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://miaoshitong.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://miaoshitong.github.io/tags/Hexo/"},{"name":"Github","slug":"Github","permalink":"http://miaoshitong.github.io/tags/Github/"},{"name":"博客搭建","slug":"博客搭建","permalink":"http://miaoshitong.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}]},{"title":"开局艰难","slug":"third","date":"2020-09-07T09:11:17.447Z","updated":"2020-09-16T01:07:24.035Z","comments":true,"path":"post/a04bbd1f.html","link":"","permalink":"http://miaoshitong.github.io/post/a04bbd1f.html","excerpt":"怎么说呢，这个博客建立的还是挺难得，花费时间太久，界面我也不满意，后续很多工作要弄，加油吧！","text":"怎么说呢，这个博客建立的还是挺难得，花费时间太久，界面我也不满意，后续很多工作要弄，加油吧！ 且行且珍惜。。。 下面微信，欢迎有趣的人~~","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://miaoshitong.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"博客建立","slug":"博客建立","permalink":"http://miaoshitong.github.io/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%8B/"},{"name":"试验","slug":"试验","permalink":"http://miaoshitong.github.io/tags/%E8%AF%95%E9%AA%8C/"}]},{"title":"第二个博客！","slug":"发第二个博客了！","date":"2020-09-07T07:35:15.944Z","updated":"2020-09-15T09:26:02.276Z","comments":true,"path":"post/99cefda3.html","link":"","permalink":"http://miaoshitong.github.io/post/99cefda3.html","excerpt":"","text":"过几天把这个博客建立过程给写一下，帮助后来人不踩坑。小白之间的相互搀扶吧，大神们看看就好，有问题也欢迎指出！","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://miaoshitong.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"博客建立","slug":"博客建立","permalink":"http://miaoshitong.github.io/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%8B/"},{"name":"试验","slug":"试验","permalink":"http://miaoshitong.github.io/tags/%E8%AF%95%E9%AA%8C/"}]},{"title":"Hello World","slug":"hello-world","date":"2020-09-07T04:19:06.532Z","updated":"2020-09-15T12:18:24.276Z","comments":true,"path":"post/4a17b156.html","link":"","permalink":"http://miaoshitong.github.io/post/4a17b156.html","excerpt":"老实说，看到Hello World很亲切，在大学的时候，第一次接触编程就看到这两个词，但很遗憾的是，当时没有坚持学下来，要不然五六年过去我现在应该能独立编写程序了，弄这个博客也不在话下。","text":"老实说，看到Hello World很亲切，在大学的时候，第一次接触编程就看到这两个词，但很遗憾的是，当时没有坚持学下来，要不然五六年过去我现在应该能独立编写程序了，弄这个博客也不在话下。 难受的是，这个博客花了我三天时间，原本给大论文的时间都被挤占了，心痛！不过还是很开心把这个博客雏形给弄出来，作为一个研究生，这点自学能力还是有的！后面就是不断完善啊，然后把它弄漂亮一点！","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://miaoshitong.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://miaoshitong.github.io/tags/Hexo/"},{"name":"博客建立","slug":"博客建立","permalink":"http://miaoshitong.github.io/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%8B/"}]}],"categories":[{"name":"文献阅读","slug":"文献阅读","permalink":"http://miaoshitong.github.io/categories/%E6%96%87%E7%8C%AE%E9%98%85%E8%AF%BB/"},{"name":"《管理世界》","slug":"文献阅读/《管理世界》","permalink":"http://miaoshitong.github.io/categories/%E6%96%87%E7%8C%AE%E9%98%85%E8%AF%BB/%E3%80%8A%E7%AE%A1%E7%90%86%E4%B8%96%E7%95%8C%E3%80%8B/"},{"name":"观影","slug":"观影","permalink":"http://miaoshitong.github.io/categories/%E8%A7%82%E5%BD%B1/"},{"name":"学习笔记","slug":"学习笔记","permalink":"http://miaoshitong.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"大数据","slug":"大数据","permalink":"http://miaoshitong.github.io/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"},{"name":"流动性","slug":"流动性","permalink":"http://miaoshitong.github.io/tags/%E6%B5%81%E5%8A%A8%E6%80%A7/"},{"name":"社会网络","slug":"社会网络","permalink":"http://miaoshitong.github.io/tags/%E7%A4%BE%E4%BC%9A%E7%BD%91%E7%BB%9C/"},{"name":"时空关","slug":"时空关","permalink":"http://miaoshitong.github.io/tags/%E6%97%B6%E7%A9%BA%E5%85%B3/"},{"name":"行为研究","slug":"行为研究","permalink":"http://miaoshitong.github.io/tags/%E8%A1%8C%E4%B8%BA%E7%A0%94%E7%A9%B6/"},{"name":"电影","slug":"电影","permalink":"http://miaoshitong.github.io/tags/%E7%94%B5%E5%BD%B1/"},{"name":"电视剧","slug":"电视剧","permalink":"http://miaoshitong.github.io/tags/%E7%94%B5%E8%A7%86%E5%89%A7/"},{"name":"Hexo","slug":"Hexo","permalink":"http://miaoshitong.github.io/tags/Hexo/"},{"name":"Github","slug":"Github","permalink":"http://miaoshitong.github.io/tags/Github/"},{"name":"博客搭建","slug":"博客搭建","permalink":"http://miaoshitong.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"},{"name":"博客建立","slug":"博客建立","permalink":"http://miaoshitong.github.io/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%8B/"},{"name":"试验","slug":"试验","permalink":"http://miaoshitong.github.io/tags/%E8%AF%95%E9%AA%8C/"}]}